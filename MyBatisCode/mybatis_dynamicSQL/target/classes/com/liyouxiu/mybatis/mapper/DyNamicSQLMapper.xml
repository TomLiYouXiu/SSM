<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liyouxiu.mybatis.mapper.DyNamicSQLMapper">

    <!--
        动态SQL：
        1.if，通过test属性中的表达式判断标签是否有效（是否会拼接到SQL中）
        2.where
            a.若where有if条件成立会自动生成where关键字
            b.会自动将where标签中内容前的多余的app去掉，内容后的and无法去掉
            c.若where标签中没有任何一个条件成立，则where没有任何功能
        3.trim
            prefix：在trim标签中的内容的前面添加某些内容
            prefixOverrides：在trim标签中的内容的前面去掉某些内容
            suffix：在trim标签中的内容的后面添加某些内容
            suffixOverrides：在trim标签中的内容的后面去掉某些内容
        4.choose ，when ，otherwise
        5.foreach
        6.sql

    -->
    <sql id="empColumns">
        emp_id,emp_name,age,gender,dept_id
    </sql>
    <!--        List<Emp> getEmpByCondition(Emp emp);-->

    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp where 1=1
        <!--存放实体类的属性-->
        <if test="empName != null and empName != ''">
            and emp_name=#{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
    </select>

    <select id="getEmpByConditionTwo" resultType="Emp">
        select * from t_emp
        <!--存放实体类的属性-->
        <where>
            <if test="empName != null and empName != ''">
                emp_name=#{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <select id="getEmpByConditionThree" resultType="Emp">
        select * from t_emp
        <!--存放实体类的属性-->
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name=#{empName} and
            </if>
            <if test="age != null and age != ''">
                 age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                 gender = #{gender}
            </if>
        </trim>
    </select>

    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColumns"></include> from t_emp
        <!--存放实体类的属性-->
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name=#{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <!--    List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
               <when test="empName != null and empName != ''">
                   emp_name=#{empName}
               </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
            </choose>
        </where>
    </select>

    <!--void insertMoreEmp(@Param("emps") List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <!--collection 设置用来循环的数组-->
        <!--item 设置用来循环的内容-->
        <!--separator 设置分割符-->
        <foreach collection="emps" item="emp" separator=",">
           (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <!--    void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmp" >
        <!--open 设置开始符号-->
        <!--close 设置结束符号-->
<!--        delete from t_emp where emp_id in-->
<!--            <foreach collection="empIds" item="empId" separator="," open="(" close=")">-->
<!--                #{empId}-->
<!--            </foreach>-->
        delete from t_emp where
            <foreach collection="empIds" item="empId" separator="or">
                emp_id= #{empId}
            </foreach>
        </delete>
    
</mapper>